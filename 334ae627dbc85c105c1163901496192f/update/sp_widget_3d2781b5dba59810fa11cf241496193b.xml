<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope, $timeout) {
	/* widget controller */
	var c = this;
	c.isLoading = true;

	$scope.loadingIndicator = $rootScope.loadingIndicator;
	//Show widget after loaded
	$scope.$on('sp_loading_indicator', function(e, value) {
		if($scope.loadingIndicator && !value){
			$timeout(function(){
				c.isLoading = false;
			}, 200);
		}
		$scope.loadingIndicator = value;
	});

	$scope.userID = $scope.user.sys_id;
	//Get user picture
	$rootScope.$on('sp.avatar_changed', function() {
		$scope.userID = "";
		$timeout(function(){
			$scope.userID = $scope.user.sys_id;
		});
	});

	c.selectTab = function(tab, index){
		c.isLoading = true;
		c.index = index;
		c.isLoading = true;

		for(var i in c.data.tabs){
			if(c.data.tabs[i].name == tab.name){
				c.data.tabs[i].selected = true;
			}
			else{
				c.data.tabs[i].selected = false;
			}
		}
		c.server.get({
			action: "selectedTab",
			widgets: c.data.widgets,
			index: index,
			tabName : tab.name
		}).then(function(response) {
			c.data.widgets = response.data.widgets;
		});
	}

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.without_role {
  padding: 30px 90px;
  font-size: 30px;
  background: white;
}

.content {
  background-color: white;
  padding: 0 90px;
  padding-top: 30px;
  padding-bottom: 50px;
  margin-bottom: 50px;
  overflow: auto;

  .header-loader{
    padding: 50px;
    padding-bottom: 100px;

    .sp-loading-indicator{
      color: $blue !important;
    }
  }

  .content_avatar {
    display: flex;
    margin-bottom: 20px;

    a {
      .avatar-custom-size {
        margin-top: 15px;
        margin-bottom: 30px;
        height: 100px;
        width: 100px;
        box-shadow: 0 0 0 4px $blue;
        font-size: 20px !important;
      }
      .avatar-container .avatar.soloAvatar .sub-avatar {
        border-radius: 0;
        font-size: 38px;
        line-height: 100px;
        font-family: $text-bold;
        background-color: white;
        color: $blue;
      }
    }

    .user-info-properties {
      margin-top: 10px;
      margin-left: 30px;
      color: $slate-gray;
      font-size: 12px;

      .name-properties {
        font-size: 30px;
        font-family: $text-bold;
        color: $blue;
        letter-spacing: -1px;
      }
      .job-properties {
        color: $dodger-blue;
      }
      .location-properties {
        text-transform: uppercase;
      }
    }
  }

  .tabs-align {
    display: flex;
    justify-content: start;

    .categories {
      display: inline-block;
      width: 20%;
      position: relative;

      .tab_items {
        transition: .4s ease-in-out;
        margin: 0 auto;

        .tab_images {
          transition: .4s ease-in-out;
          height: 80px;
          display: flex;
          justify-content: center;

          .icon-img {
            transition: .4s ease-in-out;
            width: 80px;
            height: 80px;
            position: absolute;
            text-align: center;
          }
        }
        .tab_title {
          transition: .4s ease-in-out;
          font-size: 14px;
          font-family: $text-bolder;
          text-align: center;
          text-transform: uppercase;
          line-height: 1.4;
          width: 150px;
          margin: inherit;
          margin-top: 10px;
        }
        &amp;:hover {

          .icon-img {
            transition: .2s ease-in-out;
            transform: scale(1.1);
            -webkit-transform: scale(1.1);
            -ms-transform: scale(1.1);
            -moz-transform: scale(1.1);
            -o-transform: scale(1.1);
          }
          .tab_title {
            transition: .2s ease-in-out;
            transform: translateY(-10px);
            -webkit-transform: translateY(-10px);
            -ms-transform: translateY(-10px);
            -moz-transform: translateY(-10px);
            -o-transform: translateY(-10px);
            color: $blue;
          }
        }
      }
      .tab_current { color: $blue; }
    }
    .categories:nth-child(1) {
      .tab_items {
        .tab_title { width: 90px; }
      }
    }
    .categories:nth-child(4) {
      .tab_items {
        .tab_title { width: 155px; }
      }
    }
  }
}

.text-align {
  text-align: center;
  padding-bottom: 30px;
}
.margin-align {
  margin: 0 auto;
  text-align: center;
}
.line {
  width: 100%;
  height: 2px;
  background-color: $blue;
  margin-top: 40px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>gservice_manager_tabs</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>GService Manager Tabs</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	var localInput = input;
	var portalUtils = new global.OCLPortalUtils();
	data.employee_role = gs.getMessage("Employee Role").toUpperCase();

	if(!localInput){
		//Used to get the current user sys_id
		data.user_id = gs.getUser().getID();

		//Get the current user information
		var grUserInfo = new GlideRecord ("sys_user");
		grUserInfo.get(data.user_id);
		data.name = grUserInfo.getValue("first_name");
		data.email = grUserInfo.getValue("email");
		data.phone = grUserInfo.getValue("mobile_phone");
		data.location = grUserInfo.getDisplayValue("location");

		var tabs = gs.getProperty("gservice_manager_tabs").split("|");
		data.tabs = [];
		for(var i in tabs){
			var tab = JSON.parse(tabs[i]);
			data.tabs.push(tab);
			data.tabs[i].label = gs.getMessage(tab.label);
		}

		data.widgets = [];
		var listWidget = {show : true,
											widget : $sp.getWidget('gservice_list_filter_manager')};
		var panelWidget = {show : false,
											 widget : $sp.getWidget('gservice_panels')};
		var reportWidget = {show : false,
												widget : $sp.getWidget('gservice_report_list')};
		data.widgets.push(listWidget);
		data.widgets.push(panelWidget);
		data.widgets.push(reportWidget);
	}
	else{
		if(localInput.action == "selectedTab"){
			data.widgets = localInput.widgets;
			for(var i in data.widgets){
				if(localInput.tabName == "reportsTab" && data.widgets[i].widget.id == "gservice_report_list"){
					data.widgets[i].widget = $sp.getWidget('gservice_report_list');
				}
				data.widgets[i].show = i == localInput.index ? true : false;
			}
		}
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>organize.henrique</sys_created_by>
        <sys_created_on>2020-06-22 12:24:02</sys_created_on>
        <sys_id>3d2781b5dba59810fa11cf241496193b</sys_id>
        <sys_mod_count>63</sys_mod_count>
        <sys_name>GService Manager Tabs</sys_name>
        <sys_package display_value="ITSM Service Portal" source="x_gmeps_itsm_servi">334ae627dbc85c105c1163901496192f</sys_package>
        <sys_policy/>
        <sys_scope display_value="ITSM Service Portal">334ae627dbc85c105c1163901496192f</sys_scope>
        <sys_update_name>sp_widget_3d2781b5dba59810fa11cf241496193b</sys_update_name>
        <sys_updated_by>organize.jorge.garcia</sys_updated_by>
        <sys_updated_on>2020-09-04 18:51:30</sys_updated_on>
        <template><![CDATA[<div class="content">
  <div class="content_tabs">
    <div class="content_avatar">
      <div>
        <a title="Avatar Pic">
          <sn-avatar class="avatar-custom-size" primary="userID" />
        </a>
      </div>
      <div class="user-info-properties">
        <div class="name-properties">{{data.name}}</div>
        <div class="job-properties">{{data.employee_role}}</div>
        <div>{{data.email}}</div>
        <div>{{data.phone}}</div>
        <div class="location-properties">{{data.location}}</div>
      </div>
    </div>
    <div class="tabs-align">
      <div class="categories" ng-repeat="tab in data.tabs" ng-if="tab.show">
        <div class="tab_items" ng-class="{'tab_current': tab.selected}" ng-click="c.selectTab(tab, $index)">
          <div class="tab_images">
            <img ng-show="!tab.selected" src="{{tab.img}}" class="icon-img"/>
            <img ng-show="tab.selected" src="{{tab.imgSelected}}" class="icon-img"/>
          </div>
          <div class="tab_title">{{tab.label}}</div>
        </div>
      </div>
    </div>
    <div class="line"></div>
  </div>
  <div class="header-loader" ng-show="c.isLoading">
    <div class="hidden-xs sp-loading-indicator" ng-if="loadingIndicator">
      <div></div>
      <div></div>
      <div></div>
    </div>
  </div>
  <div id="show-selected-item" ng-repeat='widget in data.widgets'>
    <div ng-show="!c.isLoading">
      <sp-widget ng-if='widget.show' widget="widget.widget"></sp-widget>
    </div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
