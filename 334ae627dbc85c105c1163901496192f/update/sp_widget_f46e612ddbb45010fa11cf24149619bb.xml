<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope, $timeout, categorySubscribe, $element, spUtil) {

	var c = this;
	c.isLoading = true;
	
	$scope.loadingIndicator = $rootScope.loadingIndicator;
	//Show widget after loaded
	$scope.$on('sp_loading_indicator', function(e, value) {
		if($scope.loadingIndicator && !value){
			c.isLoading = false;
		}
		$scope.loadingIndicator = value;
	});

	c.data.newNotificationAvailable = false;

	spUtil.recordWatch($scope, "sc_task", c.data.taskQuery, function(event) {
		c.refreshNotificationsCount(event.data);
	});

	spUtil.recordWatch($scope, "incident", c.data.incidentQuery, function(event) {
		c.refreshNotificationsCount(event.data);
	});

	spUtil.recordWatch($scope, "sysapproval_approver", c.data.approverQuery, function(event) {
		c.refreshApprovalsCount();
	});

	c.refreshNotificationsCount = function(item){
		c.server.get({
			action: "notificationsCount",
			taskQuery: c.data.taskQuery,
			incidentQuery : c.data.incidentQuery
		}).then(function(response) {
			c.data.notificationsCount = response.data.notificationsCount;
			c.refreshNotifications(item);
		});
	}
	
	c.refreshNotifications = function(item){
		if(c.data.selectedTab.name == "notificationsTab"){
			if(item.record.state.value == "3" || item.record.state.value == "-5"){
				for(i in item.changes){
					if(item.changes[i] == "state"){
						c.data.newNotificationAvailable = true;
					}
				}
			}
		}
	}

	c.refreshApprovalsCount = function(){
		c.server.get({
			action: "approvalsCount",
			approverQuery : c.data.approverQuery
		}).then(function(response) {
			c.data.approvalsCount = response.data.approvalsCount;
		});
	}

	$scope.userID = $scope.user.sys_id;
	//Get user picture
	$rootScope.$on('sp.avatar_changed', function() {
		$scope.userID = "";
		$timeout(function(){
			$scope.userID = $scope.user.sys_id;
		});
	});
	
	c.selectTab = function(tab){
		c.isLoading = true;
		//Var used to show notification modal
		c.data.newNotificationAvailable = false;

		for(i in c.data.tabs){
			if(c.data.tabs[i].name == tab.name){
				c.data.tabs[i].selected = true;
			}
			else{
				c.data.tabs[i].selected = false;
			}
		}

		c.server.get({
			action: "selectedTab",
			tab: tab 
		}).then(function(response) {
			c.data.gservice_dashboard_list = response.data.gservice_dashboard_list;
			//$rootScope.$broadcast('updateRequestList');
		});
	}

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.content {&#13;
  background-color: white;&#13;
  padding: 0 90px;&#13;
  padding-top: 30px;&#13;
&#13;
  .header-loader{&#13;
    padding: 50px;&#13;
    padding-bottom: 100px;&#13;
    .sp-loading-indicator{&#13;
      color: $deep-sky-blue !important;&#13;
    }&#13;
  }&#13;
&#13;
  .content_avatar {&#13;
    display: flex;&#13;
&#13;
    a {&#13;
      .avatar-custom-size {&#13;
        margin-top: 15px;&#13;
        margin-bottom: 30px;&#13;
        height: 90px;&#13;
        width: 90px;&#13;
        box-shadow: 0 0 0 4px $deep-sky-blue;&#13;
        font-size: 20px !important;&#13;
      }&#13;
      .avatar-container .avatar.soloAvatar .sub-avatar {&#13;
        border-radius: 0;&#13;
        font-size: 50px;&#13;
        line-height: 95px;&#13;
        font-family: $text-bold;&#13;
        background-color: white;&#13;
        color: $deep-sky-blue;&#13;
      }&#13;
    }&#13;
&#13;
    .user-info-properties {&#13;
      margin-left: 100px;&#13;
      color: $slate-gray;&#13;
&#13;
      .name-properties {&#13;
        font-size: 30px;&#13;
        font-family: $text-bold;&#13;
        color: $deep-sky-blue;&#13;
        letter-spacing: -1px;&#13;
      }&#13;
      .job-properties {&#13;
        color: $dodger-blue;&#13;
        font-size: 14px;&#13;
      }&#13;
      .location-properties {&#13;
        text-transform: uppercase;&#13;
      }&#13;
    }&#13;
  }&#13;
&#13;
  .tabs-align {&#13;
    display: flex;&#13;
    justify-content: center;&#13;
&#13;
    .categories {&#13;
      display: inline-block;&#13;
      width: 20%;&#13;
      position: relative;&#13;
&#13;
      .tab_items {&#13;
        transition: .4s ease-in-out;&#13;
        //padding: 0 20px;&#13;
        margin: 0 auto;&#13;
&#13;
        .tab_images {&#13;
          transition: .4s ease-in-out;&#13;
          height: 80px;&#13;
          display: flex;&#13;
          justify-content: center;&#13;
&#13;
          .icon-img {&#13;
            width: 80px;&#13;
            height: 80px;&#13;
            position: absolute;&#13;
            text-align: center;&#13;
          }&#13;
        }&#13;
        .tab_title {&#13;
          transition: .4s ease-in-out;&#13;
          font-size: 14px;&#13;
          font-family: $text-bolder;&#13;
          text-align: center;&#13;
          text-transform: uppercase;&#13;
          line-height: 1;&#13;
          width: 150px;&#13;
          margin: inherit;&#13;
          margin-top: 10px;&#13;
        }&#13;
        &amp;:hover {&#13;
&#13;
          .icon-img {&#13;
            transition: .2s ease-in-out;&#13;
            transform: scale(1.1);&#13;
            -webkit-transform: scale(1.1);&#13;
            -ms-transform: scale(1.1);&#13;
            -moz-transform: scale(1.1);&#13;
            -o-transform: scale(1.1);&#13;
          }&#13;
          .tab_title {&#13;
            transition: .2s ease-in-out;&#13;
            transform: translateY(-10px);&#13;
            -webkit-transform: translateY(-10px);&#13;
            -ms-transform: translateY(-10px);&#13;
            -moz-transform: translateY(-10px);&#13;
            -o-transform: translateY(-10px);&#13;
            color: $deep-sky-blue;&#13;
          }&#13;
        }&#13;
      }&#13;
      .tab_current {&#13;
        color: $deep-sky-blue;&#13;
      }&#13;
&#13;
    }&#13;
    .categories:nth-child(1) {&#13;
      .tab_items {&#13;
        .tab_title { width: 90px; }&#13;
      }&#13;
    }&#13;
    .categories:nth-child(4) {&#13;
      .tab_items {&#13;
        .tab_title { width: 155px; }&#13;
      }&#13;
    }&#13;
&#13;
  }&#13;
&#13;
}&#13;
&#13;
.text-align {&#13;
  text-align: center;&#13;
  padding-bottom: 30px;&#13;
}&#13;
&#13;
.margin-align {&#13;
  margin: 0 auto;&#13;
  text-align: center;&#13;
}&#13;
&#13;
.count-align {&#13;
  text-align: center;&#13;
  background: $coral;&#13;
  height: 20px;&#13;
  width: 20px;&#13;
  border-radius: 50%;&#13;
  color: white;&#13;
  font-family: $text-bold;&#13;
  position: absolute;&#13;
  bottom: 95px;&#13;
  right: 20px;&#13;
}&#13;
&#13;
.notification-align {&#13;
  font-size: 12px;&#13;
  font-family: $text-bold;&#13;
  line-height: 1;&#13;
}&#13;
&#13;
.line {&#13;
  width: 100%;&#13;
  height: 2px;&#13;
  background-color: $deep-sky-blue;&#13;
  margin-top: 30px;&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>legacy_gservice_my_dashboard_tabs</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>GService My Dashboard Tabs</name>
        <option_schema>[{"displayValue":"Category","hint":"Selecione a categoria que deseja exibir","name":"selected_category","display_value_list":[],"section":"Data","label":"Category","type":"glide_list","value":"sc_category","ed":{"reference":"sc_category"}}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	var localInput = input;
	var portalUtils = new global.OCLPortalUtils();

	//Used to get the current user sys_id
	var userID = gs.getUser().getID();
	data.user_id = userID;

	//Get the current user information
	var grUserInfo = new GlideRecord ("sys_user");
	grUserInfo.get(data.user_id);
	data.name = grUserInfo.getValue("first_name");
	data.email = grUserInfo.getValue("email");
	data.phone = grUserInfo.getValue("mobile_phone");
	data.location = grUserInfo.getDisplayValue("location");

	data.taskQuery = "state=-5^u_pending_reason=1^request_item.opened_by=" + gs.getUserID();
	data.incidentQuery = "state=3^hold_reason=1^opened_by=" + gs.getUserID();
	data.approverQuery = "state=requested^source_table=sc_req_item^approver=" + gs.getUserID();

	data.notificationsCount = portalUtils.setNotificationsCount(data.taskQuery, data.incidentQuery);
	data.approvalsCount = portalUtils.setApprovalsCount(data.approverQuery);

	var tabs = gs.getProperty("gservice_dashboard_tabs").split("|");
	data.tabs = [];
	for(i in tabs){
		var tab = JSON.parse(tabs[i]);
		if(tab.show == false){
			tab.show = (gs.getUser().hasRole("approver_user") || gs.getUser().hasRole("itil"));
		}
		data.tabs.push(tab);
		data.tabs[i].label = gs.getMessage(tab.label);
	}
	
	var gservice_dashboard_list_options = {"table": data.tabs[0].name,
										   "table_template": data.tabs[0].template};
	data.gservice_dashboard_list = $sp.getWidget('gservice_my_dashboard_content', gservice_dashboard_list_options);

	if(localInput){
		if(localInput.action == "selectedTab"){
			var gservice_dashboard_list_options = {"table": localInput.tab.name,
												   "table_template": localInput.tab.template};
			data.gservice_dashboard_list = $sp.getWidget('gservice_my_dashboard_content', gservice_dashboard_list_options);
		}
		if(localInput.action == "notificationsCount"){
		}
		if(localInput.action == "approvalsCount"){
			data.approvalsCount = portalUtils.setApprovalsCount(localInput.approverQuery);
		}
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>organize.fernando</sys_created_by>
        <sys_created_on>2020-05-15 13:49:52</sys_created_on>
        <sys_id>f46e612ddbb45010fa11cf24149619bb</sys_id>
        <sys_mod_count>382</sys_mod_count>
        <sys_name>GService My Dashboard Tabs</sys_name>
        <sys_package display_value="ITSM Service Portal" source="x_gmeps_itsm_servi">334ae627dbc85c105c1163901496192f</sys_package>
        <sys_policy/>
        <sys_scope display_value="ITSM Service Portal">334ae627dbc85c105c1163901496192f</sys_scope>
        <sys_update_name>sp_widget_f46e612ddbb45010fa11cf24149619bb</sys_update_name>
        <sys_updated_by>organize.jorge.garcia</sys_updated_by>
        <sys_updated_on>2020-07-30 15:19:51</sys_updated_on>
        <template/>
    </sp_widget>
</record_update>
