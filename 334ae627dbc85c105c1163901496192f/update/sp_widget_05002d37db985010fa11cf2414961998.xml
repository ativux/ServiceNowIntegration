<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope, categorySubscribe) {
	/* widget controller */
	var c = this;

	$scope.$on('openSelectedCategoryItem', function (event, categoryID, itemID) {
		c.server.get({
			action: "openCategoryItem",
			categoryID: categoryID,
			itemID: itemID
		}).then(function(response) {
			//			$rootScope.$broadcast('openMenu', "service");
			if(response.data.showItem){
				categorySubscribe.setSelectedItem(response.data.category, response.data.secondCategory, response.data.thirdCategory,
																					itemID);
			}
			else if(response.data.showThirdCategory){
				categorySubscribe.setThirdCat(response.data.category, response.data.secondCategory, response.data.thirdCategory);
			}
			else if(response.data.showSecondCategory){
				categorySubscribe.setSecondCat(response.data.category, response.data.secondCategory);
			}
			else{
				categorySubscribe.setCategoryID(response.data.category);
			}
		});
	});
	
	
	
	$rootScope.$on('openAgainItem', function (event, categoryID, itemID) {
		
	
		
		c.server.get({
			action: "openCategoryItem",
			categoryID: categoryID,
			itemID: itemID
		}).then(function(response) {
			
			c.data.refresh=false;
			
			if(response.data.showItem){

					categorySubscribe.setSelectedItem(response.data.category, response.data.secondCategory, response.data.thirdCategory,
																						itemID);
			
			}
			
		});
	});
	




	if(c.data.refresh){
		setTimeout(function(){
			c.server.update().then(function(response){
				if(c.data.cart_item_selected){
					if(c.data.showItem){
						categorySubscribe.setDuplicateItem(c.data.category, c.data.secondCategory, c.data.thirdCategory,c.data.itemID,
																							 c.data.cart_item_id);
					}
				}
				else if(c.data.item_selected){	
					categorySubscribe.setSelectedItem(c.data.category, c.data.secondCategory, c.data.thirdCategory,c.data.itemID);
				}
				else if(c.data.do_yourself){
					$rootScope.$broadcast('showHideWidget', "do_yourself");
				}
				else if(c.data.kb_selected){
					$rootScope.$broadcast("kb_category", c.data.knowledge_id);
				}
				else if(c.data.category_selected){
					if(c.data.secondSelected){
						categorySubscribe.setSecondCat(c.data.category_id, c.data.secondCategory);
					}
					else{
						categorySubscribe.setThirdCat(c.data.category_id, c.data.secondCategory, c.data.thirdCategory);
					}
				}
			});
		}, 500);
	}
	
	$scope.$on('goToSecondCategory', function (event, category, secondCategory) {
		categorySubscribe.setSecondCat(category, secondCategory);
	});
	
	$scope.$on('goToThirdCategory', function (event, category, secondCategory, thirdCategory) {
		categorySubscribe.setThirdCat(category, secondCategory, thirdCategory);
	});
	
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>gservice_catalog_navigation</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>GService Catalog Navigation</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */
	var localInput = input;

	data.refresh = true;
	data.cart_item_id = false;
	data.kb_selected = false;
	data.do_yourself = false;
	data.category_selected = false;
	data.secondSelected = false;

	if(localInput){
		if(localInput.action == "openCategoryItem"){
			data.thirdCategory = false;
			data.showItem = false;
			var categoryID = localInput.categoryID;
			var itemID = localInput.itemID;

			getItemCategory(itemID, categoryID);
		}

		else{
			data.refresh = false;

			data.cart_item_selected = false;
			data.item_selected = false;

			var item_id = $sp.getParameter("item_id");
			data.do_yourself = $sp.getParameter("do_yourself");
			data.knowledge_id = $sp.getParameter("knowledge_id");
			data.category_id = $sp.getParameter("category_id");
			data.copy_id = $sp.getParameter("copy_id");

			if(data.copy_id){
				var grCSC = new GlideRecord("x_gmeps_csc_csc");
				if(grCSC.get(data.copy_id)){
					item_id = grCSC.getValue("service");	
				}
			}
			if(item_id && item_id != "undefined"){
				getItemCategory(item_id);
				data.item_selected = true;
			}
			else if(data.knowledge_id){
				data.kb_selected = true;
			}
			else if(data.category_id){
				data.category_selected = true;
				var grCategory = new GlideRecord("sc_category");
				grCategory.get(data.category_id);

				var grCategoryParent = new GlideRecord("sc_category");
				grCategoryParent.get(grCategory.getValue("parent"));
				if(grCategoryParent.getValue("parent")){
					data.secondCategory = {sys_id : grCategoryParent.getUniqueValue()};
					data.category_id = grCategoryParent.getValue("parent");

					var portalUtils = new global.OCLPortalUtils();
					var thirdCategories = portalUtils.getSubcategories(grCategoryParent.getUniqueValue(), grCategoryParent.getValue("title"));
					for(i in thirdCategories){
						if(thirdCategories[i].sys_id == grCategory.getUniqueValue()){
							data.thirdCategory = thirdCategories[i];
						}
					}
				}
				else{
					data.secondCategory = {sys_id : data.category_id, url : grCategory.getValue("u_portal_redirect_url")};
					data.category_id = grCategory.getValue("parent");
					data.secondSelected = true;
				}



			}
		}

	}

	function getItemCategory (itemID, categoryID){
		data.itemID = itemID;
		if(itemID){
			data.showItem = true;

			var grItem = new GlideRecord("sc_cat_item");
			if(grItem.get(itemID)){
				categoryID = grItem.getValue("category");
			}
			else{
				var grLinkItem = new GlideRecord("x_gmeps_csc_link_catalog_item");
				grLinkItem.get(itemID);
				categoryID = grLinkItem.getValue("category");

			}


		}

		var portalUtils = new global.OCLPortalUtils();
		data.showSecondCategory = false;
		data.showThirdCategory = false;
		var grCategory = new GlideRecord("sc_category");
		grCategory.get(categoryID);
		data.category = grCategory.getUniqueValue();
		if(!grCategory.getValue("parent")){
			return;
		}
		else{
			data.showSecondCategory = true;
			var grSecondCategory = grCategory;

			grCategory = new GlideRecord("sc_category");
			grCategory.get(grSecondCategory.getValue("parent"));

			if(!grCategory.getValue("parent")){
				data.category = grCategory.getUniqueValue();
				var jsonCategory = portalUtils.selectedCategory(grSecondCategory.getValue("parent"));
				for(i in jsonCategory.secondCategories){
					if(jsonCategory.secondCategories[i].sys_id == categoryID){
						data.secondCategory = jsonCategory.secondCategories[i];
					}
				}
				return;
			}
			else{
				data.showThirdCategory = true;

				var grThirdCategory = grSecondCategory;
				grSecondCategory = grCategory;

				data.category = grSecondCategory.getValue("parent");

				var jsonCategory = portalUtils.selectedCategory(data.category);
				for(i in jsonCategory.secondCategories){
					if(jsonCategory.secondCategories[i].sys_id == grSecondCategory.getUniqueValue()){
						data.secondCategory = jsonCategory.secondCategories[i];
					}
				}

				var thirdCategories = portalUtils.getSubcategories(data.secondCategory.sys_id, data.secondCategory.title);

				for(i in thirdCategories){
					if(thirdCategories[i].sys_id == categoryID){
						data.thirdCategory = thirdCategories[i];
					}
				}
			}
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>organize.fernando</sys_created_by>
        <sys_created_on>2020-04-27 16:02:31</sys_created_on>
        <sys_id>05002d37db985010fa11cf2414961998</sys_id>
        <sys_mod_count>192</sys_mod_count>
        <sys_name>GService Catalog Navigation</sys_name>
        <sys_package display_value="ITSM Service Portal" source="x_gmeps_itsm_servi">334ae627dbc85c105c1163901496192f</sys_package>
        <sys_policy/>
        <sys_scope display_value="ITSM Service Portal">334ae627dbc85c105c1163901496192f</sys_scope>
        <sys_update_name>sp_widget_05002d37db985010fa11cf2414961998</sys_update_name>
        <sys_updated_by>vlfernan</sys_updated_by>
        <sys_updated_on>2021-08-02 20:38:01</sys_updated_on>
        <template/>
    </sp_widget>
</record_update>
