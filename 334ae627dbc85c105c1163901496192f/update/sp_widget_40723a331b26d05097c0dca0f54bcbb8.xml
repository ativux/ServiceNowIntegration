<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope) {
	var c = this;
	c.filterMask = false;
	c.selected = '';

	for(var i in c.data.filters.filterBy){
		c.data.filters.filterBy[i].selected = false;
	}

	c.applyFilterCSC = function(filter){
		if(filter){
			if(filter.table == "u_question"){
				if(filter.selected)
					c.filterMask = true;
				else
					c.filterMask = false;
				var length = c.data.filters.typeFilter.length - 1;
				for(var i = 0; i < length; i++){
					c.data.filters.typeFilter[i].selected = false;
				}
			} else{
				c.filterMask = false;
				for(var i in c.data.filters.typeFilter){
					if(c.data.filters.typeFilter[i].table == "u_question")
						c.data.filters.typeFilter[i].selected = false;
				}
			}
		}
		$rootScope.$broadcast('applyFilterCSC', c.data.filters);
	}

	c.applyFilterBy = function(index){
		c.inputDate = null;
		for(var i in c.data.filters.filterBy){
			c.data.filters.filterBy[i].selected = false;
		}
		c.data.filters.filterBy[index].selected = true;
		$rootScope.$broadcast('applyFilterBy', index);
	}

	c.applyDate = function(daysAgo, dateOrder){
		c.selected = daysAgo+dateOrder;
		c.inputDate = null;
		$rootScope.$broadcast('applyDateCSC', daysAgo, dateOrder);
	}
	
	c.sendDate = function (dateCalendar, dateOrder){
		c.selected = '';
		var dateFormated = c.convertDate(dateCalendar);
		$rootScope.$broadcast('sendDateCSC', dateFormated, dateOrder);
	}
	
	
	c.convertDate = function(dateCalendar){ 
		var formattedDates = []; 
		var dateString = dateCalendar.toString();
		var day = dateString.substring(8, 10);
		var year = dateString.substring(11, 15);
		var month = dateString.substring(4, 7);

		switch(month){
			case "Jan":
				month = "01";
				break;
			case "Feb":
				month = "02";
				break;
			case "Mar":
				month = "03";
				break;
			case "Apr":
				month = "04";
				break;
			case "May":
				month = "05";
				break;
			case "Jun":
				month = "06";
				break;
			case "Jul":
				month = "07";
				break;
			case "Aug":
				month = "08";
				break;
			case "Sep":
				month = "09";
				break;
			case "Oct":
				month = "10";
				break;
			case "Nov":
				month = "11";
				break;
			case "Dec":
				month = "12";
				break;
		}
		
		formattedDates.dateConvertedOpened = year+'-'+month+'-'+day;
		formattedDates.dateConvertedForecast = year+'-'+day+'-'+month;
		return formattedDates;
	}
	

	c.clearAllFilters = function(){
		for(var i in c.data.filters.statusFilter){
			c.data.filters.statusFilter[i].selected = false;
		}
		for(i in c.data.filters.typeFilter){
			c.data.filters.typeFilter[i].selected = false;
		}
		for(i in c.data.filters.filterBy){
			c.data.filters.filterBy[i].selected = false;
		}
		$rootScope.$broadcast('clearAllFiltersCSC');
	}

	c.statusFilterState = function(){
		c.data.showStatusFilter = !c.data.showStatusFilter;
	}

	c.typeFilterState = function(){
		c.data.showTypeFilter = !c.data.showTypeFilter;
	}

	c.FilterBy = function(){
		c.data.showFilterBy = !c.data.showFilterBy;
	}

	$scope.$on("getSearchedItemsFilterClear", function (event) {
		c.server.update();
	});
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.content_list {&#13;
  margin-top: 20px;&#13;
  margin-bottom: 20px;&#13;
  padding-left: 0 !important;&#13;
&#13;
  .filter-click-size {&#13;
    transition: .4s ease-in-out;&#13;
    width: 120px;&#13;
    height: 30px;&#13;
    margin-bottom: 20px;&#13;
  }&#13;
&#13;
  .title {&#13;
    color: $dark-orchid;&#13;
    font-size: 14px;&#13;
    font-family: $text-bolder;&#13;
    text-transform: uppercase;&#13;
    line-height: 1;&#13;
    margin-bottom: 15px !important;&#13;
&#13;
    .break-line-other {&#13;
      transition: .4s ease-in-out;&#13;
      width: 60px;&#13;
    }&#13;
  }&#13;
  .date-field{&#13;
    border: none;&#13;
    border-bottom: 2px solid #8028FF;&#13;
    align-items: center;&#13;
  }&#13;
  .title-date{&#13;
    color: $dark-orchid;&#13;
    font-size: 14px;&#13;
    font-family: $text-bolder;&#13;
    text-transform: uppercase;&#13;
    line-height: 1;&#13;
    border-bottom: 3px solid #c8c9c7;&#13;
    width: 90px;&#13;
    padding: 10px 0px;&#13;
    .title-transaction{&#13;
      transition: .4s ease-in-out;&#13;
    }&#13;
  }&#13;
  &#13;
  .border-selected {&#13;
    border-bottom: 3px solid #8028FF !important;&#13;
  }&#13;
&#13;
  .break-line-filter {&#13;
    width: 84px;&#13;
  }&#13;
&#13;
  .mask_filter {&#13;
    overflow: hidden;&#13;
&#13;
    .content_filters {&#13;
      transition: .5s ease-in-out;&#13;
    }&#13;
    .filter_open {&#13;
      margin-top: 0;&#13;
    }&#13;
    .filter_close {&#13;
      margin-top: -260px;&#13;
    }&#13;
  }&#13;
&#13;
  .status_filter {&#13;
    transition: .1s ease-in-out;&#13;
    cursor: pointer;&#13;
    display: flex;&#13;
&#13;
    input[type="checkbox"]{&#13;
      display: none;&#13;
    }&#13;
&#13;
    &amp;:hover {&#13;
      transition: .1s ease-in-out;&#13;
      opacity: .6;&#13;
    }&#13;
&#13;
    .new-radio {&#13;
      height: 16px;&#13;
      width: 16px;&#13;
      border-radius: 50%;&#13;
      border: 2px solid #737373;&#13;
      display: block;&#13;
      position: absolute;&#13;
      left: 0;&#13;
      top: 4px;&#13;
    }&#13;
    .radio-after {&#13;
      content: "";&#13;
      height: 10px;&#13;
      width: 10px;&#13;
      display: block;&#13;
      position: absolute;&#13;
      left: 1px;&#13;
      top: 1px;&#13;
      border-radius: 50%;&#13;
      background-color: $dark-orchid;&#13;
    }&#13;
    .filter_name {&#13;
      margin-left: 25px;&#13;
      margin-top: 4px;&#13;
      margin-bottom: -6px;&#13;
      font-size: 12px;&#13;
      font-family: $text-bold;&#13;
    }&#13;
  }&#13;
&#13;
  .arrow-size {&#13;
    transition: .4s ease-in-out;&#13;
    height: 10px;&#13;
    position: relative;&#13;
    top: -34px;&#13;
    left: 100px;&#13;
  }&#13;
  .invert-arrow {&#13;
    transform: rotate(180deg);&#13;
  }&#13;
  .filter_type {&#13;
    .arrow-size {&#13;
      left: 82px;&#13;
    }&#13;
  }&#13;
&#13;
  .confirm_button {&#13;
    transition: .4s ease-in-out;&#13;
    font-size: 12px;&#13;
    color: $dark-orchid;&#13;
    font-family: $text-bolder;&#13;
    text-decoration: underline;&#13;
    text-transform: uppercase;&#13;
    margin-left: 30px;&#13;
    padding-top: 10px !important;&#13;
  }&#13;
&#13;
  .radio-properties {&#13;
    position: relative;&#13;
    display: inline-block;&#13;
    padding-bottom: 5px;&#13;
  }&#13;
&#13;
  .list-properties {&#13;
    padding-left: 0 !important;&#13;
    margin-bottom: -8px;&#13;
  }&#13;
&#13;
  .detail_search {&#13;
    margin-top: -30px;&#13;
    margin-right: 60px;&#13;
  }&#13;
&#13;
  .filter-click-size, .break-line-other, .title-transaction {&#13;
    &amp;:hover {&#13;
      transition: .2s ease-in-out;&#13;
      transform: scale(1.1);&#13;
      -webkit-transform: scale(1.1);&#13;
      -ms-transform: scale(1.1);&#13;
      -moz-transform: scale(1.1);&#13;
      -o-transform: scale(1.1);&#13;
    }&#13;
  }&#13;
&#13;
  .statusMask{&#13;
    background: white;&#13;
    height: 100%;&#13;
    width: 98%;&#13;
    z-index: 1;&#13;
    position: absolute;&#13;
    opacity: 0.5;&#13;
    outline: solid white;&#13;
  }&#13;
}&#13;
&#13;
@media only screen and (max-width: 768px) {&#13;
&#13;
  .content_list {&#13;
&#13;
    .filter-click-size {&#13;
      margin-bottom: 0;&#13;
    }&#13;
    .break-line-filter {&#13;
      width: 200px;&#13;
    }&#13;
    .arrow-size {&#13;
      left: 148px;&#13;
    }&#13;
    .filter_type {&#13;
      .arrow-size {&#13;
        left: 130px;&#13;
      }&#13;
    }&#13;
    .title .break-line-other {&#13;
      width: 150px;&#13;
    }&#13;
&#13;
  }&#13;
&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>gservice_list_filter_csc</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>GService List Filter CSC</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	var localInput = input;

	data.filters = {statusFilter : [], typeFilter : [], filterBy : []};
	data.showStatusFilter = true;
	data.showTypeFilter = true;
	data.showFilterBy = true;

	var statusFilter = gs.getProperty("gservice_list_filters_status_csc").split("|");
	var typeFilter = gs.getProperty("gservice_list_filters_type_csc").split("|");
	var filterBy = gs.getProperty("gservice_list_filters_by_csc").split("|");

	for(var i in statusFilter){
		data.filters.statusFilter.push(JSON.parse(statusFilter[i]));
	}

	for(i in typeFilter){
		data.filters.typeFilter.push(JSON.parse(typeFilter[i]));
	}

	for(i in filterBy){
		data.filters.filterBy.push(JSON.parse(filterBy[i]));
	}

	data.statusFilterTitle = gs.getMessage("Filtrar por status").toUpperCase();
	data.typeFilterTitle = gs.getMessage("Filtrar por tipo").toUpperCase();
	data.filterByTitle = gs.getMessage("Filtrar por").toUpperCase();
	data.lastDays = gs.getMessage("Last 15 days").toUpperCase();
	data.lastMonth = gs.getMessage("Last month").toUpperCase();
	data.clearFilter = gs.getMessage("Clear Filters").toUpperCase();

	data.search_property = gs.getProperty("gservice_my_requests_search_source");

	var typeahead_search_options = {"contextual_search_sources": data.search_property, "limit": 5, 
																	"broadcast_name" : "getSearchedItemsFilterCSC",
																	"category_color" : "color_category2",
																	"category_bg_color" : "bgcolor_category2",
																	"category_bd_color" : "bdcolor_category2",
																	"category_search_img" : "GS_SearchBox_PB.png"
																 };

	data.gserviceTypeahead = $sp.getWidget('gservice_typeahead_search', typeahead_search_options);


})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>organize.fernando</sys_created_by>
        <sys_created_on>2020-08-17 18:23:24</sys_created_on>
        <sys_id>40723a331b26d05097c0dca0f54bcbb8</sys_id>
        <sys_mod_count>194</sys_mod_count>
        <sys_name>GService List Filter CSC</sys_name>
        <sys_package display_value="ITSM Service Portal" source="x_gmeps_itsm_servi">334ae627dbc85c105c1163901496192f</sys_package>
        <sys_policy/>
        <sys_scope display_value="ITSM Service Portal">334ae627dbc85c105c1163901496192f</sys_scope>
        <sys_update_name>sp_widget_40723a331b26d05097c0dca0f54bcbb8</sys_update_name>
        <sys_updated_by>accenture.emily</sys_updated_by>
        <sys_updated_on>2022-01-28 17:42:00</sys_updated_on>
        <template><![CDATA[<div class="content_list col-md-12">
  <div class="col-md-2 filter-padding filter_type">
    <div ng-click="c.typeFilterState()" class="filter-click-size">
      <div class="title break-line-filter">{{data.typeFilterTitle}}</div>
      <img class="arrow-size" src="GS_Seta_PB.png" ng-class="c.data.showTypeFilter ? '' : 'invert-arrow'"/>
    </div>
    <div class="mask_filter">
      <div class="content_filters" ng-class="c.data.showTypeFilter ? 'filter_open' : 'filter_close'">
        <div class="list-properties" ng-repeat="typeFilter in data.filters.typeFilter">
          <div method="get" class="radio-properties">
            <label for="{{typeFilter.name}}CSC" class="status_filter">
              <input type="checkbox"
                     id="{{typeFilter.name}}CSC"
                     name="selectedItem"
                     value="{{typeFilter.name}}"
                     ng-model="typeFilter.selected"
                     ng-click="c.applyFilterCSC(typeFilter)">
              <div class="new-radio">
                <span ng-class="typeFilter.selected ? 'radio-after' : ''"></span>
              </div>
              <div class="filter_name">{{typeFilter.name}}</div>
            </label>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-md-3 filter-padding">
    <div ng-class="c.filterMask ? 'statusMask' : ''"></div>
    <div ng-click="c.statusFilterState()" class="filter-click-size">
      <div class="title break-line-filter">{{data.statusFilterTitle}}
      </div>
      <img class="arrow-size" src="GS_Seta_PB.png" ng-class="c.data.showStatusFilter ? '' : 'invert-arrow'"/>
    </div>
    <div class="mask_filter">
      <div class="content_filters" ng-class="c.data.showStatusFilter ? 'filter_open' : 'filter_close'">
        <div class="list-properties" ng-repeat="statusFilter in data.filters.statusFilter">
          <div method="get" class="radio-properties">
            <label for="{{statusFilter.name}}CSC" class="status_filter">
              <input type="checkbox"
                     id="{{statusFilter.name}}CSC"
                     name="selectedItem"
                     value="{{statusFilter.name}}"
                     ng-model="statusFilter.selected"
                     ng-click="c.applyFilterCSC()">
              <div class="new-radio">
                <span ng-class="statusFilter.selected ? 'radio-after' : ''"></span>
              </div>
              <div class="filter_name">{{statusFilter.name}}</div>
            </label>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-md-2 filter-padding">
    <div></div>
    <div ng-click="c.FilterBy()" class="filter-click-size">
      <div class="title break-line-filter">{{data.filterByTitle}}
      </div>
      <img class="arrow-size" src="GS_Seta_PB.png" ng-class="c.data.showFilterBy ? '' : 'invert-arrow'"/>
    </div>
    <div class="mask_filter">
      <div class="content_filters" ng-class="c.data.showFilterBy ? 'filter_open' : 'filter_close'">
        <div class="list-properties" ng-repeat="filterBy in data.filters.filterBy">
          <div class="radio-properties">
            <label for="{{filterBy.name}}FilterBy" class="status_filter">
              <input type="checkbox"
                     id="{{filterBy.name}}FilterBy"
                     name="selectedItem"
                     value="{{filterBy.name}}FilterBy"
                     ng-model="filterBy.selected"
                     ng-click="c.applyFilterBy(filterBy.value)">
              <div class="new-radio">
                <span ng-class="filterBy.selected ? 'radio-after' : ''"></span>
              </div>
              <div class="filter_name">{{filterBy.name}}</div>
            </label>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-md-2 filter-padding" ng-if="data.filters.filterBy[0].selected == true">
    <div>
      <input class="date-field" ng-model="c.inputDate" ng-change="c.sendDate(c.inputDate, 'opened_at')" type="date">
    </div>
    <div ng-class="{'border-selected': c.selected == '15opened_at'}" class="title-date title-transaction">
      <div ng-click="c.applyDate(15, 'opened_at')">{{data.lastDays}}</div>
    </div>
    <div ng-class="{'border-selected': c.selected == '30opened_at'}" class="title-date title-transaction">
      <div ng-click="c.applyDate(30, 'opened_at')">{{data.lastMonth}}</div>
    </div>
  </div>

  <div class="col-md-2 filter-padding" ng-if="data.filters.filterBy[1].selected == true">
    <div>
      <input class="date-field" ng-model="c.inputDate" ng-change="c.sendDate(c.inputDate, 'forecast')" type="date">
    </div>
    <div ng-class="{'border-selected': c.selected == '15forecast'}" class="title-date title-transaction">
      <div ng-click="c.applyDate(15, 'forecast')">{{data.lastDays}}</div>
    </div>
    <div ng-class="{'border-selected': c.selected == '30forecast'}" class="title-date title-transaction">
      <div ng-click="c.applyDate(30, 'forecast')">{{data.lastMonth}}</div>
    </div>
  </div>

  <div class="col-md-3 detail_search filter-padding" ng-if="data.filters.filterBy[2].selected == true">
    <sp-widget widget="data.gserviceTypeahead"></sp-widget>
  </div>

  <div class="col-md-1 title filter-padding">
    <div ng-click="c.clearAllFilters()" class="break-line-other">{{data.clearFilter}}</div>
  </div>


</div>]]></template>
    </sp_widget>
</record_update>
